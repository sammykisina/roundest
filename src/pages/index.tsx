import { type NextPage } from "next";
import Head from "next/head";
import { api } from "../utils/api";
import { app_utils } from "@/utils";
import { useEffect, useState } from "react";

import { SpinnerLoader } from "@/components";
import Image from "next/image";

const Home: NextPage = () => {
  // const { data, isLoading } = api.example.hello.useQuery({ text: "from tRPC" });
  const { getRandomPokemon } = app_utils;
  const [first_id, setFirstId] = useState(0);
  const [second_id, setSecondId] = useState(0);

  const first_pokemon = api.pokemon.getPokemonById.useQuery({
    id: first_id,
  });

  const second_pokemon = api.pokemon.getPokemonById.useQuery({
    id: second_id,
  });

  const setPokemonIds = (first_id: number, second_id: number) => {
    setFirstId(first_id);
    setSecondId(second_id);
  };

  useEffect(() => {
    const first_pokemon_id = getRandomPokemon();
    const second_pokemon_id = getRandomPokemon(first_pokemon_id);

    if (first_pokemon_id && second_pokemon_id) {
      setPokemonIds(first_pokemon_id, second_pokemon_id);
    }
  }, []);

  const { mutateAsync } = api.pokemon.voteForPokemon.useMutation({
    onSuccess: () => {
      // console.log("voted created");
    },
    onError: (error) => {
      console.log("error", error);
    },
  });

  const voteForRoundest = (selected_pokemon_id: number) => {
    // voting
    if (selected_pokemon_id === first_id) {
      mutateAsync({
        voted_for: first_id,
        voted_against: second_id,
      });
    } else {
      mutateAsync({
        voted_for: second_id,
        voted_against: first_id,
      });
    }

    // set new pokemons
    const first_pokemon_id = getRandomPokemon();
    const second_pokemon_id = getRandomPokemon(first_pokemon_id);

    setPokemonIds(first_pokemon_id, second_pokemon_id);
  };

  return (
    <>
      <Head>
        <title>roundest</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="relative h-screen">
        <div className="flex h-full flex-col  items-center justify-center ">
          <div className="text-center text-2xl">Which Pokemon is Rounder?</div>

          <div className="p-2" />

          <div className="flex max-w-2xl items-center justify-between rounded border px-8 py-10">
            {!first_pokemon.isLoading &&
            first_pokemon.data &&
            !second_pokemon.isLoading &&
            second_pokemon.data ? (
              <>
                <div className="flex flex-col items-center">
                  <Image
                    src={first_pokemon.data.spriteUrl}
                    width={256}
                    height={256}
                    alt=""
                  />
                  {/* <img className="h-64 w-64 " alt="" /> */}

                  <div className=" -mt-[2rem] text-center text-xl first-letter:uppercase">
                    {first_pokemon?.data?.name}
                  </div>

                  <button
                    onClick={() => voteForRoundest(first_id)}
                    className="btn"
                  >
                    Roundest
                  </button>
                </div>

                <div className="p-8">Vs</div>

                <div className="flex flex-col items-center ">
                  <Image
                    src={second_pokemon.data.spriteUrl}
                    width={256}
                    height={256}
                    alt=""
                  />
                  <div className=" -mt-[2rem] text-center text-xl first-letter:uppercase">
                    {second_pokemon?.data?.name}
                  </div>

                  <button
                    onClick={() => voteForRoundest(second_id)}
                    className="btn"
                  >
                    Roundest
                  </button>
                </div>
              </>
            ) : (
              <SpinnerLoader color="fill-white" />
            )}

            <div className="p-2" />
          </div>

          <div className="absolute bottom-0 mb-3 text-xl text-white">
            <a href="https://github.com/sammykisina/roundest">Github</a>
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
